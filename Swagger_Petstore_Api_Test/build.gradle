apply plugin: 'java'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'

description = 'Automation swaggerpetstore'
group = 'com.devsu.certification.swaggerpetstore'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}
buildscript {
    repositories {
        flatDir {
            dirs("libs")
        }

        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:3.4.2")
    }
}
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
ext {
    serenityVersion = '4.0.43'
    serenityCucumberVersion = '4.0.43'
    bonigarcia = '5.6.3'
    gson = '2.10.1'
    slf4jSimple = '2.0.9'
    log4jCore = '2.17.1'
    ssertjCore = '3.22.0'
    jsonSchemaValidator = '2.2.6'
    junitVersion = '4.13.2'
    jacksonVersion = '2.14.2'
}

dependencies {
    implementation (fileTree(dir:'libs', include:['*.jar']))
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-rest-assured:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}"
    implementation "net.serenity-bdd:serenity-junit:${serenityVersion}"
    implementation "org.assertj:assertj-core:${ssertjCore}"
    implementation "junit:junit:${junitVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jCore}"
    implementation "org.apache.logging.log4j:log4j-api:${log4jCore}"
    implementation "com.google.code.gson:gson:${gson}"
    implementation "com.github.fge:json-schema-validator:${jsonSchemaValidator}"
    testImplementation "org.slf4j:slf4j-simple:${slf4jSimple}"

}


test {

    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    systemProperty "env", "qa"

}

serenity {
    testRoot = "com.devsu.certification.swaggerpetstore"
    requirementsDir = "com.devsu.certification.swaggerpetstore"
    requirementsBaseDir = "src/test/resources/features"
}

allprojects {
    sourceCompatibility = 11
    targetCompatibility = 11
}


gradle.startParameter.continueOnFailure = true